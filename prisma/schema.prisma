datasource db {
    provider = "postgres"
    url = env("DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id Int @id @default(autoincrement())
    email String @db.VarChar(50) @unique
    username String @db.VarChar(20)
    password String @db.VarChar(255)
    create_at DateTime @default(now())
    refresh_token String? @unique
    quizzes Quiz[]
    responses Response[]
}

model Quiz {
    id Int @id @default(autoincrement())
    title String @db.VarChar(255)
    description String @db.Text
    created_at DateTime @default(now())
    deadline DateTime
    slug String @unique
    creatorId Int
    creator User @relation(fields: [creatorId], references: [id], onDelete: Cascade)
    questions Question[]
    responses Response[]
}

model Question {
    id Int @id @default(autoincrement())
    question_text String @db.Text
    quizId Int
    quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)
    answers Answer[]
}

model Response {
    id Int @id @default(autoincrement())
    score Int
    quizId Int
    date DateTime @default(now())
    quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)
    userId Int
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    
}

model Answer {
    id Int @id @default(autoincrement())
    answer_text String
    isCorrect Boolean
    questionId Int
    qustion Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
}